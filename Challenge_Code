Sub AllStocksAnalysisRefactored()    Dim startTime As Single    Dim endTime  As Single    yearValue = InputBox("What year would you like to run the analysis on?")    startTime = Timer        'Activate output worksheet, add data and format    Worksheets("All_Stocks_Analysis").Activate            'Add Headers        Range("A1").Value = "All Stocks (" + yearValue + ")"        Cells(3, 1).Value = "Ticker"        Cells(3, 2).Value = "Total Daily Volume"        Cells(3, 3).Value = "Return"            'Add the Style        Range("A3:C3").Font.FontStyle = "Bold"        Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous        Range("B4:B15").NumberFormat = "#,##0"        Range("C4:C15").NumberFormat = "0.0%"            'Activate data worksheet    Worksheets(yearValue).Activate            'Get the number of rows to loop over        RowCount = Cells(Rows.Count, "A").End(xlUp).Row                 'loop through worksheet to find unique ticker elements then add them to our array            Dim tickers() As String, x As Long            x = 1                        'Make an array changes size in relation to x, but don't overwrite it's values            ReDim Preserve tickers(x)                Selection = Range(Cells(2, 1), Cells(RowCount, 1))                                For Each cell In Selection                    'https://excelmacromastery.com/vba-arraylist/                    If Not tickers.Contains(cell.Value) Then                        ReDim Preserve tickers(x)                        tickers(x - 1) = cell.Value                        x = x + 1                                            End If                Next            'https://stackoverflow.com/questions/30574814/get-length-of-array            Length = UBound(tickers) - LBound(tickers) + 1                           'Create output arrays            Dim tickerVolumes() As Long, startingPrices(), endingPrices() As Single                'loop through data worksheet and append the output worksheet            For i = 0 To Length                ReDim Preserve tickers(Length)                tickerIndex = i                ticker_name = tickers(i)                'Activate Worksheet, Initialize Arrays, then loops over all the rows in the spreadsheet to append output.                Worksheets(yearValue).Activate                    ReDim Preserve tickerVolumes(Length), startingPrices(Length), endingPrices(Length)                    tickerVolumes(tickerIndex) = 0                    startingPrices(tickerIndex) = 0                    endingPrices(tickerIndex) = 0                                    For j = 2 To RowCount                                        'Increase volume for current ticker                        If Cells(j, 1).Value = ticker_name Then                            ReDim Preserve tickerVolumes(Length)                            tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(j, 8).Value                                            End If                        'Set the starting Price                        If (Cells(j - 1, 1).Value <> ticker_name And Cells(j, 1).Value = ticker_name) Or Cells(j - 1, 1) = Cells(1, 1) Then                            ReDim Preserve startingPrices(Length)                            startingPrices(tickerIndex) = Cells(j, 6).Value                                                End If                        'Set the ending price                        If Cells(j + 1, 1).Value <> ticker_name And Cells(j, 1).Value = ticker_name Then                            ReDim Preserve endingPrices(Length)                            endingPrices(tickerIndex) = Cells(j, 6).Value                                                End If                    'Increase the tickerIndex.                    Next j                            'Activate output update worksheet with Ticker, Total Daily Volume, and Return.                Worksheets("All_Stocks_Analysis").Activate                    Cells(4 + i, 1).Value = ticker_name                    Cells(4 + i, 2).Value = tickerVolumes(tickerIndex)                    Cells(4 + i, 3).Value = (endingPrices(tickerIndex) / startingPrices(tickerIndex)) - 1                    Columns("B").AutoFit                                    'Color Code if its a "Good" or "Bad" Investment                    If Cells(4 + i, 3).Value > 0 Then                        Cells(4 + i, 3).Interior.Color = vbGreen                                        ElseIf Cells(4 + i, 3).Value = 0 Then                        Cells(4 + i, 3).Interior.Color = none                                            Else                        Cells(4 + i, 3).Interior.Color = vbRed                                            End If        Next i        endTime = Timer    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)End Sub