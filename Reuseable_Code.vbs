Sub AllStocksAnalysisRefactored()    Dim startTime As Single    Dim endTime  As Single    yearValue = InputBox("What year would you like to run the analysis on?")    startTime = Timer        'Activate output worksheet, add data and format    Worksheets("All_Stocks_Analysis").Activate            'Add Headers        Range("A1").Value = "All Stocks (" + yearValue + ")"        Cells(3, 1).Value = "Ticker"        Cells(3, 2).Value = "Total Daily Volume"        Cells(3, 3).Value = "Return"            'Add the Style        Range("A3:C3").Font.FontStyle = "Bold"        Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous        Range("B4:B15").NumberFormat = "#,##0"        Range("C4:C15").NumberFormat = "0.0%"            'Activate data worksheet    Worksheets(yearValue).Activate            'Get the number of rows to loop over        RowCount = Cells(Rows.Count, "A").End(xlUp).Row                            'Loop through the worksheet and find unique ticker elements to add them to array            Dim tickers() As String, x As Long            x = 1                                               'Redimension the arrays size in relation to x, but don't overwrite it's values            ReDim Preserve tickers(x)            tickers(x - 1) = "name"                                For i = 2 To RowCount                    'https://excelmacromastery.com/vba-arraylist/                    ReDim Preserve tickers(x)                        If Cells(i, 1).Value <> tickers(x - 1) Then                        'MsgBox (Cells(i, 1).Value)                            ReDim Preserve tickers(x)                            tickers(x - 1) = Cells(i, 1).Value                            x = x + 1                            ReDim Preserve tickers(x)                            tickers(x - 1) = Cells(i, 1).Value                                                End If                Next i                                'Apend array tickers to active worksheet yearValue                'For i = 1 To x                    'Cells(i + RowCount + 5, 1).Value = tickers(i - 1)                            'Next i                            'remove any duplicates from ticker storage                'removenator = Range(Cells(RowCount + 6, 1), Cells(RowCount + x + 5, 1))                'ActiveSheet.removenator.RemoveDuplicates Columns:=Array(1)                                'get new row count                'newRowCount = Cells(Rows.Count, "A").End(xlUp).Row                'knewRowCount = newRowCount - RowCount - 5                                'append to an array remdimensioned to that size                'ReDim Preserve tickers(knewRowCount)                'For i = (RowCount + 6) To newRowCount                    'tickers(i - (RowCount + 6)) = Cells(RowCount + 6, 1).Value                                'Next i            'Length = knewRowCount            Length = UBound(tickers) - LBound(tickers)                           'Initialize index and Create output arrays            Dim tickerIndex As Single            Dim tickerVolumes(), startingPrices(), endingPrices() As Long            tickerIndex = 0            ReDim Preserve tickerVolumes(tickerIndex), startingPrices(tickerIndex), endingPrices(tickerIndex)                        'loop through data worksheet and append the output worksheet            For tickerIndex = 0 To Length                ReDim Preserve tickers(Length)                ticker_name = tickers(tickerIndex)                'Activate Worksheet, Initialize Arrays, then loops over all the rows in the spreadsheet to append output.                Worksheets(yearValue).Activate                    ReDim Preserve tickerVolumes(tickerIndex + 1), startingPrices(tickerIndex + 1), endingPrices(tickerIndex + 1)                    tickerVolumes(tickerIndex) = 0                                    For j = 2 To RowCount                                        'Increase volume for current ticker                        If Cells(j, 1).Value = ticker_name Then                            ReDim Preserve tickerVolumes(tickerIndex)                            tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(j, 8).Value                                            End If                        'Set the starting Price                        If (Cells(j - 1, 1).Value <> ticker_name And Cells(j, 1).Value = ticker_name) Or Cells(j - 1, 1) = Cells(1, 1) Then                            ReDim Preserve startingPrices(tickerIndex)                            startingPrices(tickerIndex) = Cells(j, 6).Value                                                End If                        'Set the ending price                        If Cells(j + 1, 1).Value <> ticker_name And Cells(j, 1).Value = ticker_name Then                            ReDim Preserve endingPrices(tickerIndex)                            endingPrices(tickerIndex) = Cells(j, 6).Value                                                End If                    'Increase the tickerIndex.                    Next j                            'Activate output update worksheet with Ticker, Total Daily Volume, and Return.                Worksheets("All_Stocks_Analysis").Activate                    Cells(4 + tickerIndex, 1).Value = ticker_name                    Cells(4 + tickerIndex, 2).Value = tickerVolumes(tickerIndex)                    Cells(4 + tickerIndex, 3).Value = endingPrices(tickerIndex) / startingPrices(tickerIndex) - 1                    Columns("B").AutoFit                        Next tickerIndex        'Color Code if its a "Good" or "Bad" Investment    If Cells(4 + i, 3).Value > 0 Then        Cells(4 + i, 3).Interior.Color = vbGreen                        ElseIf Cells(4 + i, 3).Value = 0 Then        Cells(4 + i, 3).Interior.Color = none                            Else        Cells(4 + i, 3).Interior.Color = vbRed                            End If        endTime = Timer    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)End Sub