Sub AllStocksAnalysisRefactoredd()    Dim startTime As Single    Dim endTime  As Single    yearValue = InputBox("What year would you like to run the analysis on?")    startTime = Timer        'Activate output worksheet, add data and format    Worksheets("All_Stocks_Analysis").Activate            'Add Headers        Range("A1").Value = "All Stocks (" + yearValue + ")"        Cells(3, 1).Value = "Ticker"        Cells(3, 2).Value = "Total Daily Volume"        Cells(3, 3).Value = "Return"            'Add the Style        Range("A3:C3").Font.FontStyle = "Bold"        Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous        Range("B4:B16").NumberFormat = "#,##0"        Range("C4:C16").NumberFormat = "0.0%"            'Activate data worksheet    Worksheets(yearValue).Activate            'Get the number of rows to loop over        RowCount = Cells(Rows.Count, "A").End(xlUp).Row                            'Loop through the worksheet and find unique ticker elements to add them to array            Dim tickers() As String, x As Long            x = 1                                               'Redimension the arrays size in relation to x, but don't overwrite it's values            ReDim Preserve tickers(x)            tickers(x - 1) = "name"                                For i = 2 To RowCount                    ReDim Preserve tickers(x)                        If Cells(i, 1).Value <> tickers(x - 1) Then                            ReDim Preserve tickers(x)                            tickers(x - 1) = Cells(i, 1).Value                                                        x = x + 1                            ReDim Preserve tickers(x)                            tickers(x - 1) = Cells(i, 1).Value                                                End If                                        Next i                            Length = UBound(tickers) - LBound(tickers) - 1                       'Activate Worksheet, Initialize Arrays, then loop over all the rows to append output.        Dim tickerVolumes() As Long, startingPrices(), endingPrices() As Single                    For tickerIndex = 0 To (Length - 1)            Worksheets(yearValue).Activate                ReDim Preserve tickerVolumes(Length), startingPrices(Length), endingPrices(Length)                ticker_name = tickers(tickerIndex)                tickerVolumes(tickerIndex) = 0                For j = 2 To RowCount                    If Cells(j, 1).Value = ticker_name Then                        tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(j, 8).Value                                                                    'Set the starting Price                                                If Cells(j - 1, 1).Value <> ticker_name Then                                startingPrices(tickerIndex) = Cells(j, 6).Value                        End If                                                'Set the ending price                                                If Cells(j + 1, 1).Value <> ticker_name Then                                endingPrices(tickerIndex) = Cells(j, 6).Value                        End If                                                End If                                    Next j                'Update output worksheet with Ticker, Total Daily Volume, and Return.                Worksheets("All_Stocks_Analysis").Activate                    Cells(4 + tickerIndex, 1).Value = ticker_name                    Cells(4 + tickerIndex, 2).Value = tickerVolumes(tickerIndex)                    Cells(4 + tickerIndex, 3).Value = (endingPrices(tickerIndex) / startingPrices(tickerIndex)) - 1                    Columns("B").AutoFit                                        'Color Code if its a "Good" or "Bad" Investment                    If Cells(4 + tickerIndex, 3).Value > 0 Then                        Cells(4 + tickerIndex, 3).Interior.Color = vbGreen                                        ElseIf Cells(4 + tickerIndex, 3).Value < 0 Then                        Cells(4 + tickerIndex, 3).Interior.Color = vbRed                    End If        Next tickerIndex        endTime = Timer    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)End Sub